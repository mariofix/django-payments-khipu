{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"django-payments-khipu","text":"<p><code>Proyecto en desarrollo activo, no listo para produccion</code></p> <p><code>django-payments-khipu</code> es una variante de Django Payments que implementa la creaci\u00f3n, confirmaci\u00f3n y expiraci\u00f3n de pagos realizados a trav\u00e9s de Khipu. Este m\u00f3dulo proporciona integraci\u00f3n con la API de Khipu para facilitar el procesamiento y gesti\u00f3n de pagos en tu aplicaci\u00f3n web Django.</p>"},{"location":"#introduccion","title":"Introducci\u00f3n","text":"<p><code>django-payments-khipu</code> est\u00e1 dise\u00f1ado para simplificar la integraci\u00f3n de pagos de Khipu en tu proyecto Django Payments. Con este m\u00f3dulo, puedes crear y gestionar pagos utilizando la pasarela de pago de Khipu de manera sencilla.</p> <p>Caracter\u00edsticas principales:</p> <ul> <li>Crea y procesa pagos de forma segura con Khipu.</li> <li>Recibe notificaciones de confirmaci\u00f3n de pago.</li> <li>Maneja autom\u00e1ticamente la expiraci\u00f3n y cancelaci\u00f3n de pagos.</li> </ul>"},{"location":"#instalacion","title":"Instalaci\u00f3n","text":"<p>Puedes instalar django-payments-khipu con:</p> usando pipusando poetry <pre><code>pip install django-payments-khipu\n</code></pre> <pre><code>poetry add django-payments-khipu\n</code></pre>"},{"location":"#configuracion","title":"Configuraci\u00f3n","text":"<p>La configuracion se realiza como una variante de Django Payments</p> <pre><code>PAYMENT_VARIANTS = {\n\"khipu\": (\"django_payments_khipu.KhipuProvider\", {\n\"key\": 1,\n\"secret\": \"qwertyasdf0123456789\",\n})\n}\n</code></pre>"},{"location":"api/","title":"API","text":""},{"location":"api/#django_payments_khipu.KhipuProvider.KhipuProvider","title":"<code>KhipuProvider</code>","text":"<p>         Bases: <code>BasicProvider</code></p> <p>KhipuProvider es una clase que proporciona integraci\u00f3n con Khipu para procesar pagos.</p> Source code in <code>django_payments_khipu/KhipuProvider.py</code> <pre><code>class KhipuProvider(BasicProvider):\n\"\"\"\n    KhipuProvider es una clase que proporciona integraci\u00f3n con Khipu para procesar pagos.\n    \"\"\"\nreceiver_id: str = None\nsecret: str = None\nuse_notification: str | None = \"1.3\"\nbank_id: str | None = None\n_client: Any = None\ndef __init__(self, receiver_id: str, secret: str, use_notification: str | None, bank_id: str | None, **kwargs):\n\"\"\"\n        Inicializa una instancia de KhipuProvider con el ID de receptor y el secreto de Khipu proporcionados.\n        Args:\n            receiver_id (str): ID de receptor de Khipu.\n            secret (str): Secreto de Khipu.\n            use_notification (str | None): Versi\u00f3n de la API de notificaciones a utilizar (opcional).\n            bank_id (str | None): Id de Banco para variante (opcional).\n            **kwargs: Argumentos adicionales.\n        \"\"\"\nsuper().__init__(**kwargs)\nself.receiver_id = receiver_id\nself.secret = secret\nself.use_notification = use_notification\nself.bank_id = bank_id\nself._client = Client(receiver_id=receiver_id, secret=secret)\ndef get_form(self, payment, data: dict | None = None) -&gt; Any:\n\"\"\"\n        Genera el formulario de pago para redirigir a la p\u00e1gina de pago de Khipu.\n        Args:\n            payment: Objeto de pago.\n            data (dict | None): Datos del formulario (opcional).\n        Returns:\n            Any: Formulario de pago redirigido a la p\u00e1gina de pago de Khipu.\n        Raises:\n            RedirectNeeded: Redirige a la p\u00e1gina de pago de Khipu.\n        \"\"\"\nif not payment.transaction_id:\ndatos_para_khipu = {\n\"transaction_id\": payment.token,\n\"return_url\": payment.get_success_url(),\n\"cancel_url\": payment.get_failure_url(),\n}\nif self.use_notification:\ndatos_para_khipu.update({\"notify_url\": self.get_notification_url()})\ndatos_para_khipu.update({\"notify_api_version\": self.use_notification})\nif self.bank_id:\ndatos_para_khipu.update({\"bank_id\": self.bank_id})\nif payment.billing_email:\ndatos_para_khipu.update({\"payer_email\": payment.billing_email})\ndatos_para_khipu.update(**self._extra_data(payment.attrs))\ntry:\npayment = self._client.payments.post(\npayment.description, payment.currency, int(payment.total), **datos_para_khipu\n)\nexcept (ValidationError, AuthorizationError, ServiceError) as pe:\npayment.change_status(PaymentStatus.ERROR, str(pe))\nraise PaymentError(pe)\nelse:\npayment.transaction_id = payment.payment_id\npayment.attrs.payment_response = payment\npayment.save()\nif \"payment_url\" not in payment:\nraise PaymentError(\"Khipu no envi\u00f3 una URL, revisa los logs en Khipu.\")\nraise RedirectNeeded(payment.get(\"payment_url\"))\ndef process_data(self, payment, request) -&gt; JsonResponse:\n\"\"\"\n        Procesa los datos del pago recibidos desde Khipu.\n        Args:\n            payment: Objeto de pago.\n            request: Objeto de solicitud HTTP de Django.\n        Returns:\n            JsonResponse: Respuesta JSON que indica el procesamiento de los datos del pago.\n        \"\"\"\nreturn JsonResponse(\"process_data\")\ndef _extra_data(self, attrs) -&gt; dict:\nif \"datos_extra\" not in attrs:\nreturn {}\ndata = attrs.datos_extra\nif \"payer_email\" in data:\ndel data[\"payer_email\"]\nif \"subject\" in data:\ndel data[\"subject\"]\nif \"currency\" in data:\ndel data[\"currency\"]\nif \"amount\" in data:\ndel data[\"amount\"]\nif \"transaction_id\" in data:\ndel data[\"transaction_id\"]\nif \"notify_url\" in data:\ndel data[\"notify_url\"]\nif \"notify_api_version\" in data:\ndel data[\"notify_api_version\"]\nreturn data\ndef refund(self, payment, amount: int | None = None) -&gt; int:\n\"\"\"\n        Realiza un reembolso del pago.\n        Args:\n            payment: Objeto de pago.\n            amount (int | None): Monto a reembolsar (opcional).\n        Returns:\n            int: Monto reembolsado.\n        Raises:\n            PaymentError: Error al realizar el reembolso.\n        \"\"\"\nif payment.status != PaymentStatus.CONFIRMED:\nraise PaymentError(\"El pago debe estar confirmado para reversarse.\")\nto_refund = amount or payment.total\ntry:\nrefund = self._client.payments.post_refunds(payment.transaction_id, to_refund)\nexcept (ValidationError, AuthorizationError, ServiceError) as pe:\nraise PaymentError(pe)\nelse:\npayment.attrs.refund = refund\npayment.save()\npayment.change_status(PaymentStatus.REFUNDED)\nreturn to_refund\ndef capture(self, payment, amount=None):\n\"\"\"\n        Captura el monto del pago.\n        Args:\n            payment: Objeto de pago.\n            amount: Monto a capturar (no utilizado).\n        Raises:\n            NotImplementedError: M\u00e9todo no implementado.\n        \"\"\"\nraise NotImplementedError()\ndef release(self, payment):\n\"\"\"\n        Libera el pago (no implementado).\n        Args:\n            payment: Objeto de pago.\n        Raises:\n            NotImplementedError: M\u00e9todo no implementado.\n        \"\"\"\nraise NotImplementedError()\n</code></pre>"},{"location":"api/#django_payments_khipu.KhipuProvider.KhipuProvider.__init__","title":"<code>__init__(receiver_id, secret, use_notification, bank_id, **kwargs)</code>","text":"<p>Inicializa una instancia de KhipuProvider con el ID de receptor y el secreto de Khipu proporcionados.</p> <p>Parameters:</p> Name Type Description Default <code>receiver_id</code> <code>str</code> <p>ID de receptor de Khipu.</p> required <code>secret</code> <code>str</code> <p>Secreto de Khipu.</p> required <code>use_notification</code> <code>str | None</code> <p>Versi\u00f3n de la API de notificaciones a utilizar (opcional).</p> required <code>bank_id</code> <code>str | None</code> <p>Id de Banco para variante (opcional).</p> required <code>**kwargs</code> <p>Argumentos adicionales.</p> <code>{}</code> Source code in <code>django_payments_khipu/KhipuProvider.py</code> <pre><code>def __init__(self, receiver_id: str, secret: str, use_notification: str | None, bank_id: str | None, **kwargs):\n\"\"\"\n    Inicializa una instancia de KhipuProvider con el ID de receptor y el secreto de Khipu proporcionados.\n    Args:\n        receiver_id (str): ID de receptor de Khipu.\n        secret (str): Secreto de Khipu.\n        use_notification (str | None): Versi\u00f3n de la API de notificaciones a utilizar (opcional).\n        bank_id (str | None): Id de Banco para variante (opcional).\n        **kwargs: Argumentos adicionales.\n    \"\"\"\nsuper().__init__(**kwargs)\nself.receiver_id = receiver_id\nself.secret = secret\nself.use_notification = use_notification\nself.bank_id = bank_id\nself._client = Client(receiver_id=receiver_id, secret=secret)\n</code></pre>"},{"location":"api/#django_payments_khipu.KhipuProvider.KhipuProvider.capture","title":"<code>capture(payment, amount=None)</code>","text":"<p>Captura el monto del pago.</p> <p>Parameters:</p> Name Type Description Default <code>payment</code> <p>Objeto de pago.</p> required <code>amount</code> <p>Monto a capturar (no utilizado).</p> <code>None</code> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>M\u00e9todo no implementado.</p> Source code in <code>django_payments_khipu/KhipuProvider.py</code> <pre><code>def capture(self, payment, amount=None):\n\"\"\"\n    Captura el monto del pago.\n    Args:\n        payment: Objeto de pago.\n        amount: Monto a capturar (no utilizado).\n    Raises:\n        NotImplementedError: M\u00e9todo no implementado.\n    \"\"\"\nraise NotImplementedError()\n</code></pre>"},{"location":"api/#django_payments_khipu.KhipuProvider.KhipuProvider.get_form","title":"<code>get_form(payment, data=None)</code>","text":"<p>Genera el formulario de pago para redirigir a la p\u00e1gina de pago de Khipu.</p> <p>Parameters:</p> Name Type Description Default <code>payment</code> <p>Objeto de pago.</p> required <code>data</code> <code>dict | None</code> <p>Datos del formulario (opcional).</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>Formulario de pago redirigido a la p\u00e1gina de pago de Khipu.</p> <p>Raises:</p> Type Description <code>RedirectNeeded</code> <p>Redirige a la p\u00e1gina de pago de Khipu.</p> Source code in <code>django_payments_khipu/KhipuProvider.py</code> <pre><code>def get_form(self, payment, data: dict | None = None) -&gt; Any:\n\"\"\"\n    Genera el formulario de pago para redirigir a la p\u00e1gina de pago de Khipu.\n    Args:\n        payment: Objeto de pago.\n        data (dict | None): Datos del formulario (opcional).\n    Returns:\n        Any: Formulario de pago redirigido a la p\u00e1gina de pago de Khipu.\n    Raises:\n        RedirectNeeded: Redirige a la p\u00e1gina de pago de Khipu.\n    \"\"\"\nif not payment.transaction_id:\ndatos_para_khipu = {\n\"transaction_id\": payment.token,\n\"return_url\": payment.get_success_url(),\n\"cancel_url\": payment.get_failure_url(),\n}\nif self.use_notification:\ndatos_para_khipu.update({\"notify_url\": self.get_notification_url()})\ndatos_para_khipu.update({\"notify_api_version\": self.use_notification})\nif self.bank_id:\ndatos_para_khipu.update({\"bank_id\": self.bank_id})\nif payment.billing_email:\ndatos_para_khipu.update({\"payer_email\": payment.billing_email})\ndatos_para_khipu.update(**self._extra_data(payment.attrs))\ntry:\npayment = self._client.payments.post(\npayment.description, payment.currency, int(payment.total), **datos_para_khipu\n)\nexcept (ValidationError, AuthorizationError, ServiceError) as pe:\npayment.change_status(PaymentStatus.ERROR, str(pe))\nraise PaymentError(pe)\nelse:\npayment.transaction_id = payment.payment_id\npayment.attrs.payment_response = payment\npayment.save()\nif \"payment_url\" not in payment:\nraise PaymentError(\"Khipu no envi\u00f3 una URL, revisa los logs en Khipu.\")\nraise RedirectNeeded(payment.get(\"payment_url\"))\n</code></pre>"},{"location":"api/#django_payments_khipu.KhipuProvider.KhipuProvider.process_data","title":"<code>process_data(payment, request)</code>","text":"<p>Procesa los datos del pago recibidos desde Khipu.</p> <p>Parameters:</p> Name Type Description Default <code>payment</code> <p>Objeto de pago.</p> required <code>request</code> <p>Objeto de solicitud HTTP de Django.</p> required <p>Returns:</p> Name Type Description <code>JsonResponse</code> <code>JsonResponse</code> <p>Respuesta JSON que indica el procesamiento de los datos del pago.</p> Source code in <code>django_payments_khipu/KhipuProvider.py</code> <pre><code>def process_data(self, payment, request) -&gt; JsonResponse:\n\"\"\"\n    Procesa los datos del pago recibidos desde Khipu.\n    Args:\n        payment: Objeto de pago.\n        request: Objeto de solicitud HTTP de Django.\n    Returns:\n        JsonResponse: Respuesta JSON que indica el procesamiento de los datos del pago.\n    \"\"\"\nreturn JsonResponse(\"process_data\")\n</code></pre>"},{"location":"api/#django_payments_khipu.KhipuProvider.KhipuProvider.refund","title":"<code>refund(payment, amount=None)</code>","text":"<p>Realiza un reembolso del pago.</p> <p>Parameters:</p> Name Type Description Default <code>payment</code> <p>Objeto de pago.</p> required <code>amount</code> <code>int | None</code> <p>Monto a reembolsar (opcional).</p> <code>None</code> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Monto reembolsado.</p> <p>Raises:</p> Type Description <code>PaymentError</code> <p>Error al realizar el reembolso.</p> Source code in <code>django_payments_khipu/KhipuProvider.py</code> <pre><code>def refund(self, payment, amount: int | None = None) -&gt; int:\n\"\"\"\n    Realiza un reembolso del pago.\n    Args:\n        payment: Objeto de pago.\n        amount (int | None): Monto a reembolsar (opcional).\n    Returns:\n        int: Monto reembolsado.\n    Raises:\n        PaymentError: Error al realizar el reembolso.\n    \"\"\"\nif payment.status != PaymentStatus.CONFIRMED:\nraise PaymentError(\"El pago debe estar confirmado para reversarse.\")\nto_refund = amount or payment.total\ntry:\nrefund = self._client.payments.post_refunds(payment.transaction_id, to_refund)\nexcept (ValidationError, AuthorizationError, ServiceError) as pe:\nraise PaymentError(pe)\nelse:\npayment.attrs.refund = refund\npayment.save()\npayment.change_status(PaymentStatus.REFUNDED)\nreturn to_refund\n</code></pre>"},{"location":"api/#django_payments_khipu.KhipuProvider.KhipuProvider.release","title":"<code>release(payment)</code>","text":"<p>Libera el pago (no implementado).</p> <p>Parameters:</p> Name Type Description Default <code>payment</code> <p>Objeto de pago.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>M\u00e9todo no implementado.</p> Source code in <code>django_payments_khipu/KhipuProvider.py</code> <pre><code>def release(self, payment):\n\"\"\"\n    Libera el pago (no implementado).\n    Args:\n        payment: Objeto de pago.\n    Raises:\n        NotImplementedError: M\u00e9todo no implementado.\n    \"\"\"\nraise NotImplementedError()\n</code></pre>"},{"location":"uso/","title":"Como Usar","text":""},{"location":"uso/#instalacion","title":"Instalaci\u00f3n","text":"<p>Para utilizar el m\u00f3dulo <code>django-payments-khipu</code>, puedes realizar la instalaci\u00f3n mediante el uso de pip o poetry.</p> usando pipusando poetry <pre><code>pip install django-payments-khipu\n</code></pre> <pre><code>poetry add django-payments-khipu\n</code></pre>"},{"location":"uso/#configuracion","title":"Configuraci\u00f3n","text":"<p>La configuraci\u00f3n del m\u00f3dulo django-payments-khipu se realiza como una variante de Django Payments. Debes agregar la siguiente configuraci\u00f3n en tu archivo de configuraci\u00f3n de Django:</p> <pre><code>PAYMENT_VARIANTS = {\n\"khipu\": (\"django_payments_khipu.KhipuProvider\", {\n\"receiver_id\": 1,\n\"secret\": \"qwertyasdf0123456789\",\n})\n}\n</code></pre>"},{"location":"uso/#variables-de-configuracion","title":"Variables de configuraci\u00f3n","text":"<ul> <li><code>receiver_id</code>: Este valor corresponde a la cuenta entregada por Khipu para identificar al receptor de los pagos.</li> <li><code>secret</code>: Este valor corresponde a la contrase\u00f1a entregada por Khipu para autenticar la comunicaci\u00f3n con su plataforma.</li> <li><code>use_notificacion</code>: Puedes establecer este valor como <code>None</code> si deseas deshabilitar las notificaciones de estado. Si deseas utilizar las notificaciones, debes especificar la versi\u00f3n de la API de notificaciones de Khipu en el formato \"x.y\" (Valor por defecto: 1.3).</li> <li><code>bank_id</code>: Si necesitas utilizar variantes diferentes para cada cuenta bancaria, puedes especificar el <code>bank_id</code> en esta configuraci\u00f3n. Tambi\u00e9n puedes proporcionar este valor utilizando <code>datos_extra</code> en cada pago. Si no se define este valor o se establece como None, Khipu solicitar\u00e1 el banco al que se realizar\u00e1 la transferencia al momento de efectuar el pago (Valor por defecto: <code>None</code>).</li> </ul>"},{"location":"uso/#datos-extra","title":"Datos Extra","text":"<p>El m\u00f3dulo <code>django-payments-khipu</code> permite enviar datos extra en cada pago. Para hacerlo, debes utilizar un objeto JSON dentro de la propiedad \"attrs\" del modelo de Pagos.</p> <p>Por ejemplo, si deseas enviar el nombre del cliente en cada compra, puedes utilizar el siguiente c\u00f3digo: <pre><code>datos_extra: dict = {\n\"payer_name\": \"Nombre de Cliente\",\n}\npayment.attrs.datos_extra = datos_extra\npayment.save()\n</code></pre></p> <p>Puedes proporcionar un diccionario unidimensional con los valores extra que deseas enviar en cada pago.</p> <p>Cabe destacar que los valores <code>payer_email</code>, <code>subject</code>, <code>currency</code>, <code>amount</code>, <code>transaction_id</code>, <code>notify_url</code>, y <code>notify_api_version</code> no pueden ser utilizados como datos extra y ser\u00e1n ignorados al momento de crear el pago.</p>"}]}